---
import { styled as p, HStack } from "@styled-system/jsx";
import { Icon } from "astro-iconify";
import { TAGS_LIST } from "@/consts";

type Props = {
  tags: string[] | null;
  full?: boolean;
};

const { tags, full = false } = Astro.props;
---

{
  tags && (
    <p.div
      display="flex"
      flexWrap="nowrap"
      gap="0.5rem"
      marginBottom="0.75rem"
      overflow="hidden"
      textOverflow="ellipsis"
      whiteSpace="nowrap"
      maxWidth="100%"
    >
      {(() => {
        // fullがtrueの場合はすべてのタグを表示
        if (full) {
          return (
            <>
              {tags.map((tag) => (
                <HStack
                  fontSize="0.75rem"
                  padding="0.2rem 0.5rem"
                  background="nsb.secondary"
                  borderRadius="4px"
                  title={tag}
                >
                  <p.div bg={"#fff"} borderRadius="4px" padding="0.2rem">
                    <Icon
                      name={
                        TAGS_LIST.find((t) => t.name === tag)?.slug ?? "mdi:tag"
                      }
                      width="16px"
                      height="16px"
                      color="currentColor"
                    />
                  </p.div>
                  {"#" + tag}
                </HStack>
              ))}
            </>
          );
        }

        // タグの名前の長さに基づいて表示するタグ数を計算
        const avgTagLength =
          tags.reduce((sum, tag) => sum + tag.length, 0) / tags.length;
        let visibleTagCount = 3; // デフォルト表示数

        // タグの平均文字数に応じて表示数を調整
        if (avgTagLength > 10) visibleTagCount = 1;
        else if (avgTagLength > 3) visibleTagCount = 2;

        return (
          <>
            {tags.slice(0, visibleTagCount).map((tag) => (
              <HStack
                fontSize="0.75rem"
                padding="0.2rem 0.5rem"
                background="nsb.secondary"
                borderRadius="4px"
                title={tag}
              >
                <p.div bg={"#fff"} borderRadius="4px" padding="0.2rem">
                  <Icon
                    name={
                      TAGS_LIST.find((t) => t.name === tag)?.slug ?? "mdi:tag"
                    }
                    width="16px"
                    height="16px"
                    color="currentColor"
                  />
                </p.div>
                {"#" + tag}
              </HStack>
            ))}
            {tags.length > visibleTagCount && (
              <p.span
                fontSize="0.75rem"
                padding="0.2rem 0.4rem"
                background="nsb.secondary"
                borderRadius="4px"
                whiteSpace="nowrap"
                title={`${tags.length - visibleTagCount}個の追加タグ: ${tags.slice(visibleTagCount).join(", ")}`}
              >
                <p.div width="16px" height="16px" padding="0.2rem">
                  {`+${tags.length - visibleTagCount}`}
                </p.div>
              </p.span>
            )}
          </>
        );
      })()}
    </p.div>
  )
}

---
import FormattedDate from "@/components/FormattedDate.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import TagsList from "@/components/TagsList.astro";
import type { Heading, Product, Post } from "@/type";
import { styled as p, HStack } from "@styled-system/jsx";
import { css } from "@styled-system/css";
import { ArkCarousel } from "@/components/ArkCarousel";
import { R2_BUCKET } from "@/consts";
import cleanImagePath from "@/utils/cleanImagePath";

type Props =
  | (Product & {
      headings: Heading[];
      icon?: string | null;
    })
  | (Post & {
      headings: Heading[];
      thumbnail?: string | null;
      carousel?: string[] | null;
    });

const {
  headings,
  id,
  title,
  slug,
  author,
  description,
  createdAt,
  updatedAt,
  tags = [],
  thumbnail = null,
  icon = null,
  carousel = null,
} = Astro.props;

const replaceThumbnail = cleanImagePath(thumbnail ?? "nasubi-new.webp");
---

<p.div width="100%">
  <p.div
    display="flex"
    flexDirection="column"
    justifyItems="center"
    alignItems="center"
    gap="4"
    marginBottom="8"
  >
    {
      carousel && thumbnail ? (
        <ArkCarousel images={carousel} thumbnail={thumbnail} client:load />
      ) : thumbnail ? (
        <p.img
          src={`${R2_BUCKET}/${replaceThumbnail}`}
          alt={title}
          width="100%"
          aspectRatio="16/9"
          objectFit="cover"
          borderRadius="lg"
        />
      ) : (
        <p.div
          inset={0}
          display="flex"
          justifyContent="center"
          alignItems="center"
          fontSize={{ base: "8rem", sm: "16rem" }}
          width="100%"
          height="100%"
          objectFit="cover"
        >
          {icon ?? "üçÜ"}
        </p.div>
      )
    }

    <HStack gap="4" fontSize="sm" color="gray.600">
      <p.div>
        ÂÖ¨ÈñãÊó•: <FormattedDate date={createdAt} />
      </p.div>
      {
        updatedAt && (
          <p.div>
            Êõ¥Êñ∞Êó•: <FormattedDate date={updatedAt} />
          </p.div>
        )
      }
    </HStack>

    <p.div justifySelf="start">
      <TagsList tags={tags} full />
    </p.div>

    <p.h1 fontSize="3xl" fontWeight="bold" lineHeight="tight">
      {title}
    </p.h1>

    {
      description && (
        <p.p fontSize="lg" color="gray.700" maxWidth="600px">
          {description}
        </p.p>
      )
    }
  </p.div>

  <p.div
    width="100%"
    height="2px"
    backgroundColor="nsb.text"
    marginY="4"
    borderRadius="full"
  />

  <p.div display={{ base: "block", lg: "none" }} marginBottom="4">
    {headings && headings.length > 0 && <TableOfContents headings={headings} />}
  </p.div>

  <slot />
</p.div>
